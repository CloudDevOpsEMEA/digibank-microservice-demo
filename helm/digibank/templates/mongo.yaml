{{ if .Values.mongo.enabled }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: digibank-mongo
  labels:
    account: mongo

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-pvc
  labels:
    chart: 'digibank-{{ .Chart.Version | replace "+" "_" }}'
    app: mongo
    version: "{{ .Values.mongo.version }}"
spec:
  accessModes:
    - "{{ .Values.mongo.pvAccessMode }}"
  resources:
    requests:
      storage: "{{ .Values.mongo.pvSize }}"

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    chart: 'digibank-{{ .Chart.Version | replace "+" "_" }}'
    app: mongo
    version: "{{ .Values.mongo.version }}"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: mongo
        version: "{{ .Values.mongo.version }}"
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: digibank-mongo
      containers:
        - name: mongo
          image: "{{ .Values.mongo.image }}:{{ .Values.mongo.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mongo-port
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          resources:
            requests:
              cpu: "{{ .Values.image.resources.requests.cpu }}"
              memory: "{{ .Values.image.resources.requests.memory }}"
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    chart: 'digibank-{{ .Chart.Version | replace "+" "_" }}'
    app: mongo
    version: "{{ .Values.mongo.version }}"
spec:
  ports:
    - name: "{{ .Values.mongo.servicePortName }}"
      port: {{ .Values.mongo.servicePort }}
      targetPort: mongo-port
  selector:
    app: mongo

---
{{ end }}
