{{- if .Values.mongo.enabled -}}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Values.mongo.name }}-deployment"
  labels:
    chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
    app: "{{ .Values.mongo.name }}"
    version: "{{ .Values.mongo.version }}"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: "{{ .Values.mongo.name }}"
        version: "{{ .Values.mongo.version }}"
    spec:
      containers:
        - name: "{{ .Values.mongo.name }}"
          image: "{{ .Values.mongo.image }}:{{ .Values.mongo.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: "{{ .Values.mongo.servicePortName }}"
              containerPort: {{ .Values.mongo.servicePort }}
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: "{{ .Values.mongo.name }}-data"
              mountPath: /data/db
          resources:
            requests:
              cpu: "{{ .Values.image.resources.requests.cpu }}"
              memory: "{{ .Values.image.resources.requests.memory }}"
      volumes:
        - name: "{{ .Values.mongo.name }}-data"
          persistentVolumeClaim:
            claimName: "{{ .Values.mongo.name }}-pvc"
{{- end -}}